{"version":3,"sources":["../src/engine/Configuration.ts","../src/engine/Cell.ts","../src/engine/Grid.ts","../src/engine/Snake.ts","../src/engine/Game.ts","../src/GameUI.ts"],"names":[],"mappings":";;AKAA;;AAMA;;AAEA,ALRO,IKQD,ALRO,SKQE,GAAG,EAAlB,ELR6B,GAAG,EAAzB;AKSP,AJTA,AGAA,AFAA,ACAA,IESM,AJTN,IAAA,CISW,GAAG,GAAd;AJTA,ADCO,IAAM,cAAc,GAAG,EAAvB;AKUP,AJXA,AGCA,AFIA,ACDA,IEOA,AHNA,ACDA,IDCA,CCDA,CEOA,EJXA;AIWA,AJPE,ADFK,AEGP,ACDA,IHFa,KAAK,ECEhB,CDFmB,GCEnB,ADFK,CCEO,CAAZ,EAAuB,CAAvB,EAAgC;AIOlC,AJNI,AGHJ,AFGA,ACDA,SFCS,CAAL,EIMJ,AHNA,ACDA,CFCa,CAAT;AIUF,AJTE,ADHG,AEYL,ACXF,IHDa,KCGJ,CAAL,CISF,AHAA,ACXF,EFEa,ADHS,CCGlB,CCSF,CFZuB,AEYX,ACXd,CEWE,CAAY,ALZP,CGCP,KEWE,EAAuC,GHAvC,CGAA,CHAwC,CGAS;AAC/C,AJTD,AGFH,AFEE,ACFA,ICAF,IAAA,CCWS,AHTP,ACFA,IAAA,EEWE,AHTF,CCFO,EEWS,AHTP,CACL,CCHO,GDGH,CGQN,MFXK,CAAS,CAAT,CDGH,CAAS,ACHM,CAAZ,CDGH,ACHJ,EDGiB,EAAb,CADK,EAEL,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAFK,EAGL,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAHK,EAIL,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAJK,EAKL,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CALK,CAAT;AGUE,ADZJ,AFWI,ACVF,SEWO,AHDA,ACVP,IEWE,AFXF,GEWc,AFXP,CAAC,GEWN,CFXU,CDUV,GAAqB,MCVf,CAAS,CAAT,EAAY,CAAZ,CAAD,CDUL,CCVsB,IAAI,UAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB,CAAP;AEYE,AJVJ,AGHA,AFYG,ACVD,IEWE,KJVJ,AEDE,GCFF,CHGA,KEDE,GAAuB,IEWA,CAAC,EFXxB,GEW6B,IAAL,CAAU,IAAV,CAAe,IAAf,CAAD,CAArB;AAEA,AJpBJ,AGaE,ADLA,CFRF,EAAA,CIoBI,KFZF,CEYQ,CAAC,ADPT,IAAA,CAAY,CDLZ,GAAW,CAAX,MEYE,CAAwB,CDP1B,EAAwC,MCOtC,EAAmC,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAnC,EAA8D,KAA9D;AACA,ADfM,AFaR,AC2ED,ED3EC,EGEE,EHFF,CAAA,EEbQ,CCeA,CAAC,GDfD,ECeN,AHFF,CEbwB,AFaxB,CEbQ,GFaR,GAAA,YAAA;AGGC,ADfO,AFaL,SEbK,AFaA,MAAL,CEbK,AFaO,GEbY,CFaxB,CAAiB,GEbZ,CFagB,UAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAT,EAAyC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAzC,CAAjB;AEND,AFOC,ACVH,EAAA,KAAA,CAAA,CCGO,AFOC,MAAL,CAAY,CCVf,CAAA,EDUG,CAAiB,CEPlB,GAAqB,AFOC,KCVxB,GAAA,EDUoB,CAAS,EEP3B,EFO+B,CAAC,ECVrB,GDUgB,CAAW,IAAI,CAAC,ACV7C,EAAiC,IDUO,KAAgB,EAA3B,CAAT,EAAyC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAzC,CAAjB;AGGH,ADTE,AFOC,ACTL,EEWE,MAAA,AFXC,CEWD,ADTO,AFOC,ICTF,CCEJ,CFOC,CAAY,CEPA,CCSf,CAAA,CHFG,CEPgB,AFOC,CCTnB,CEWD,EHFwB,CGExB,CFXoB,MCEL,CDFjB,CCEI,AFOkB,CGEf,AHFwB,ACR/B,IEUE,AHFiC,CAAC,CGEjB,IHFY,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAT,EAAyC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAzC,CAAjB;AGGD,ADTA,AFOC,ACRH,QEUQ,CDTD,AFOC,CCRL,GCCD,ECSa,AHFZ,CEPW,AFOC,EGEG,CFVN,CCCM,AFOf,CAAiB,EGEG,CFVN,CDQO,IGEN,CAAY,ADThB,ADDd,CCCuB,CDAvB,GDOoB,CEPQ,AFOC,IGEX,AHFe,CGEQ,AHFP,IGEhB,CAAhB,AHF2B,CAAW,EEP1B,CAAZ,CFO0C,CAAC,MAAL,KAAgB,EAA3B,CAAT,EAAyC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAzC,CAAjB;AEND,AFOC,ACPD,QAAA,CCAK,AFOC,MAAL,CAAY,CEPb,ADAS,GCAO,AFOf,ACPW,CCAZ,AFOkB,IAAI,ECPtB,QDOkB,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAT,EAAyC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAzC,CAAjB;AGED,ADRA,AFOD,ACPA,GDCD,KGOM,CDRC,ICQI,GDRT,CCQI,CAAU,CDRC,IAAf,OCQI,CAAuB,IAAvB,CAAJ,EAAkC;AAChC,ADRH,ADEF,KARD,MEcW,AFLN,IAAG,KAAK,KEKP,CAAoB,GFLlB,IEKF,CFLqB,MAAtB,EACL;AEKM,AHDJ,ACHA,EDGA,IAAA,CAAA,GCHG,CEIM,KHDT,CAAA,EGCI,AFJQ,CEIM,IFJD,GEIb,GHDJ,CCHA,EDGA,ACFA,UDEc,IAAd,EAAwB;AGEpB,ADRJ,AFOE,ACFA,ECLF,IAAA,CAAA,CDKE,GEGO,AHDA,KEPT,AFOc,CEPd,ADKW,GEGP,AFHU,CEGK,CHDV,CAAY,EEPrB,CDKE,CDEO,CGCL,ADRJ,AFO0B,UAAA,EEP1B,IFO0B,EAAM;AGE5B,ADRF,AFMkC,ACDnC,WEGQ,ADRA,EFM2B,GENtB,GFM4B,CGEtC,AHFuC,CGExB,ADRjB,AFMkC,KAAa,EGE7C,EHFiD,CAAC,CAAlB,IAAuB,MAAM,CAAC,CAAP,KAAa,IAAI,CAAC,CAAzC;AGGhC,ADRH,AFK6E,ACA/E,GCPC,EFOS,ACNN,MESM,AHH2E,ACCjF,IAAG,KEEF,AHHF,ACCS,CEEQ,OAAf,CFFE,KAAmB,IAAtB,EACL;AEEM,AHHH,ACED,GDJA,OCIG,CECM,QFDG,EECR,CAAgB,EFDH,KECb,CFDJ,EACA;AECI,ADRJ,ADQE,ECRF,IAAA,CAAA,CDQE,GEAO,IAAL,CAAU,ADRd,CAAA,ADQW,GAAG,EEAV,CAAiB,CFAnB,GEAE,MDRJ,GAAA,YAAA;ACSG,ADRD,AFKF,ACGC,EDHD,IAAA,CAAA,IELS,KAAK,AFKd,CAAA,WAAA,CELE,EFKF,UAAY,IAAZ,EAAsB;AEJrB,AFKC,ACGH,GCVC,EDIG,GDGK,GCIL,EDJU,ECIP,CDJU,ICIL,CDJU,MAAL,CAAY,CCItB,GDJU,CAAiB,CCIR,MAAtB,EACL,CDLmC,KAAA,EAAK;AGGpC,AHHwC,ACM1C,IEHE,MFGC,GDNuC,KAAK,CAAC,ACMpC,CDN8B,ICMzB,CEHM,AHH+B,CGG9B,EFGxB,CDN0D,CAAC,ACO3D,CEJ6B,AHHa,IGGlB,AHHwC,CGG9B,IAAV,AHH6C,CGG9B,AHH+B,CAAN,GGGxC,CAAD,CAArB,AHH0E,IAAI,CAAC,CAAvC;AGIzC,ADPD,AFGkF,ACQhF,ECXF,CCLA,EHQgB,CEHhB,AFGE,CEHF,CDWE,QCXF,CAAA,ADWW,GAAG,MAAZ,GCXF,GAAA,UAAa,IAAb,EAAyB;AACvB,AFGA,ACQD,QDRO,CAAC,EEHA,CFGG,IEHE,CFGG,MEHR,AFGG,CAAY,GEHC,IAAI,AFGjB,CAAoB,GEHC,EFGrB,CAAV,EEHoC,QAApC;ACQF,ADPC,AFGC,ACQH,EEJC,CDTA,KCSA,CAAA,AHJO,MAAL,CAAY,EGId,CAAA,GHJE,CAAmB,CAAnB,EAAqB,CAArB,MGIF,GAAA,UAAe,OAAf,EAAgD;AACxC,AHJP,GAJD,KGQQ,EAAA,GAAA,KAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,ADNR,ADUF,ECVE,IAAA,CAAA,CCMU,CFIP,IEJO,GAAA,ADNV,CAAA,CCMU,AFIZ,CEJY,EFIK,ECVf,CCMQ,EDNR,IDUF,MCVS,IAAP,EAAmB;ACMX,ADLN,AFGF,ACOC,EDPD,CC1BA,GD0BA,CAAA,CGEiB,CDLV,KCKU,EHFjB,CGEiB,ADLf,AFGF,EGEiB,CAAA,ADLC,GFGlB,CEHsB,ECKd,AHFR,CEHyB,KAAK,MFG9B,OEHyB,CAAmB,KAA1C;AAEA,AFEA,QAAI,CEFC,KAAL,AFEU,CEFC,EFEE,EEFb,GFEA;AGGA,AFKF,EAAA,EELE,GFKF,CAAA,GELS,CAAC,KFKV,CAAA,GELE,CFKF,EELsB,CFKtB,QELE,IFKF;AEJE,ADJA,AFCA,ACQA,IELA,IHHI,CCQC,EELE,CAAC,ADJA,CFCC,ACQT,CAAU,GCTG,CDSb,CDRI,ACQW,CELf,AHHgB,CGGC,CAAjB,EAAoB,AFKA,CELpB,CHHI,CGGmB,ADJf,CDSR,CCTA,EFC2B,CGG3B,AHHA,EGG8B,AHF9B,MGEA;AACD,ADJG,AFEA,GGHJ,GHGI,KEFK,CAAC,AFEA,CEFN,EFES,IAAT;AEDE,AFEH,ACMD,QAAI,KCRK,ADQA,GCRL,KDQA,GAAgB,KAAK,IAAL,CAAU,MAA9B,EAAsC;AEHxC,ADJM,ADQF,EEJJ,MAAA,CAAA,EFIS,IAAL,CAAU,EEJd,CAAA,EFII,OEJJ,GAAA,UAAU,OAAV,EAA2C;AACnC,AHHJ,ACOD,QEJK,EAAA,CHHG,EGGH,IHHJ,CGGI,IAAA,CAAA,gBAAA,EAAA;AAAA,ADJJ,AFEH,GAPD,KGSU,GDJD,CAAL,CCIM,GAAA,EAAA,CAAA,KAAF;AAAA,ADHF,ADQJ,QELe,IFKP,CCRC,CCGM,GAAA,AFKF,CCRT,CCGW,ADHA,CCGA,GDHX,GCGE,AFKN;ACPI,AFEN,ACMI,EDNJ,IAAA,CAAA,ICMS,ECRE,GFEX,CAAA,CEFM,ADQF,ICRgB,GAAd,CFEN,GAAA,YAAA;AGEE,ADHI,AFEJ,ACMI,IELJ,OAAO,AHDA,CGCC,CDHC,ADQA,GELT,AHDY,CEFR,ADQA,CCRU,CCGC,CFKC,EDNhB,ECMoB,CELC,GAAG,CDHpB,CAAsB,CCGX,GAAe,AFKd,CCRe,ADQN,KCRC,ADQI,CCRO,GDQZ,CELzB,AFKmC,CAAV,ECRC,CDQa,CCRnC,ADQY,EAA0B,KAAK,IAAL,CAAU,CAApC,CAAZ;AEJJ,AHDD,ACMK,GDRN,CGGE,OAAO,CAAC,YAAR,GAAuB,QAAvB;AACA,ADJI,ICIJ,OAAO,CAAC,ADJA,KAAK,ICIb,ADJQ,CAAU,ECIE,IDJZ,EAAJ,ECIJ,ADJ4B;ACK5B,ADJM,AFEV,ACMM,IEJF,KHFJ,EGEW,AFIA,CEJC,CHFZ,EEFe,EDQT,IEJF,CDJM,ECIc,wBAApB;AACA,ADJK,AF3CT,ACmDQ,CDnDR,EAAA,CG+CI,OAAO,CAAC,CFIC,IAAL,GEJJ,AFIgB,CEJC,GFIG,MEJpB,EAA4B,EFIZ,CAAS,EEJQ,GAAG,AFIN,CEJ9B,EAAuC,CFId,CAAU,CAAnB,EAAsB,CEJO,GAAG,CAAhD,AFI2C,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;AEHL,AFIK,GEZN;ADPE;ACiBF,ADLC,ADQG,EEHJ,CDtBA,KCsBA,CAAA,EFGS,IAAL,GEHJ,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACzC,AFGI,IEHJ,OAAO,CAAC,CFGC,GEHT,CFGI,EEHW,CFGC,IEHI,AFGA,KEHL,GAAa,EFGZ,CAAS,KAAK,EEH9B,EFGyB,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;AEFJ,ADLF,ADQM,ECRN,ECKE,EDLF,CAAA,ICKS,CAAC,IDLV,CAAA,ICKE,GAAoB,GDLtB,GCKE,ADLF,YAAA;ACME,ADLA,ICKA,IDLM,GCKC,CAAC,ADLE,GAAG,KAAK,ICKlB,CDLa,CAAW,CCKD,KAAvB,CDLa,EAAb,CADF,CAEE;ACKA,AFEE,IEFF,OAAO,AFEA,CEFC,KFEN,IEFF,GAAoB,wBAApB;AACA,ADLA,ADOI,IEFJ,IDLI,GCKG,CAAC,CDLC,ADOA,IAAL,GEFJ,AFEgB,CEFC,CDLb,CAAe,CDOC,CEFC,CAAC,CDLlB,KAAwB,ECKX,AFED,CAAS,EEFQ,ADLA,GDOH,ECPF,CAAW,CDOd,CEFR,AFEkB,CAAV,CEFzB,EAA6C,AFEN,CCPX,ADOZ,CCP+B,CDOL,EEFQ,CDLtB,CAA5B,CDO+C,CCPO,CCKtD,EAAyD,AFEf,CAAU,CAApC,CAAZ,EEF0D,KAA9D;AACD,ADLG,ADOE,GERN;ADEI,ADNF,aCMS,CAAC,CAAR;ACMJ,ADLG,ADQF,EEHD,CFjBA,ECMA,CAOE,ECIF,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,OAAT,EAA0C;AACxC,QAAM,IAAI,GAAG,KAAK,IAAlB;AFIF,EAAA,KAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AEHQ,ADLN,ADSA,QEJM,ADLF,CDSC,CEJC,GAAA,ADLG,ICKH,ADLF,ADSJ,CEJM,ADLQ,GDSG,CAAjB,SCTI,CAAwB,ECKtB,EAAA,ADLF,CAAJ,EAAmC;ACK7B,ADJJ,ADSH,GAFD,KEHU,KAAA,ADJC,CAAP,ECIM,EAAA,CAAA,KAAF;AAAA,ADHL,KAVH,CAWE,ECEe,MAAA,GAAA,EAAA,CAAA,MAAT;AAAA,AFOR,EAAA,KAAA,CEPyB,AFOzB,SEPyB,AFOzB,CAAA,EEPyB,EAAA,CAAA,EFOzB,GAAA,IEPQ,QFOR;AEPQ,AFQN,QERkC,GFQ3B,KAAK,EERsB,EFQlC,CERkC,EAAA,CAAA,UAA5B;ADDN,ADUD,GAFD,QCRS,CAAP;ACEA,ADDD,GAbD,KCcQ,SAAS,GAAG,IAAI,KAAtB;AAEA,AFQF,EAAA,EERE,GFQF,CAAA,GERS,CAAC,KFQV,CAAA,KERE,EFQF,CERwB,EFQxB,UAAQ,IAAR,EAAkB,MERhB;AACA,ADFF,ADUC,ECVD,ECEE,EDFF,CAAA,CDUK,GERI,CAAC,AFQD,GAAG,CCVZ,CAAA,GDUC,CERC,GAAoB,ADFtB,GAAA,MCEE,MDFF;AACE,SAAK,KAAL,IAAc,IAAd;ACGA,ADFA,ADUD,QAAI,CERE,ADFA,ICEI,AFQD,CERE,GAAG,AFQV,CERH,AFQa,EERG,CAAC,CDFjB,ADUG,CCVgB,ADUD,EERG,GDFrB,ECEA,EAA4B,CAAC,AFQX,IERe,GFQf,EAAO,IERzB,EAA4C;AAC1C,AFO2B,MEP3B,OAAO,AFOoB,CEPnB,MFO0B,CAAC,CAAR,CEP3B,IFOyC,IAAI,CAAC,CAAnB,IAAwB,OAAO,CAAC,CAAR,KAAc,IAAI,CAAC,CAA3C;AEN3B,ADHF,ADSyE,KAAtE,CEND,EDHE,GDS2E,EENtE,ADHA,CCGC,CFMX,EACA,GEPG,CAAe,CAAf,EAAkB,CAAlB,CDHE,CAAmB,KAAnB,GAA2B,wBAA/B,EAA0C;ACIxC,ADHA,ADUF,MEPE,AFOF,IAAI,CCVG,ECGE,AFOF,CEPG,GFOV,GEPE,CAAe,CAAf,EAAkB,ADHlB,CAAmB,KCGnB,ADHA,IAA4B,CAA5B;ACIA,ADHA,ADUF,MEPE,KDHK,ECGE,CAAC,CDHR,CAAU,ICGV,ADHA;ACID,ADHA,KAHD,MAGO;AACL,ADSJ,WCTS,ADSF,GCTH,CDSJ;AELE,ADHC,ADSF,GARD,MEEO,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,MAArB,EAA6B,CAAC,IAAI,UAAlC,EAA8C;AAC5C,ADHH,GATD,GCYI,OAAO,CAAC,SAAR;AACA,AFMJ,EAAA,IENI,CFMJ,CAAA,KENW,CAAC,GFMZ,CAAA,EENI,CAAe,CAAf,EAAkB,CAAlB,KFMJ,GAAA,YAAA;AELI,ADHJ,ADSE,ECTF,ICGI,ADHJ,CAAA,IDSS,EENE,CAAC,EDHZ,ADSc,CCTd,GCGI,ADHJ,CCGmB,EDHnB,EDSE,CENE,EAAsB,CAAtB,MDHJ;ACII,ADHF,ADSD,GAFD,GEJI,GDHG,ICGI,ADHT,CCGU,MAAR;AACD,ADHF,GAFD;ACMC,AFMD,EAAA,CE3BA,IF2BA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;ACRA,ADSE,ECTF,IAAA,CAAA,IDSS,KCTT,ADSc,CCTd,GAAA,ADSE,GCTF,YAAA;ACIA,ADHE,ADSD,EEND,CFIA,KEJA,CAAA,ADHO,IAAL,KCGF,CAAA,UAAA,GAAA,UAAW,OAAX,EAA4C;AACpC,ADHP,GAFD,KCKQ,EAAA,GAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,AFOV,QEPY,CFOZ,KAAA,GEPY,GAAA,EAAA,CAAA,SAAF;AAAA,ADDR,ADlFF,CAAA,CCkFE,CDlFF,GCkFE,CAAA,CCCqB,QDDrB,CAAA,CCCqB,GAAA,EAAA,CAAA,EDDrB,GAAA,KCCQ,KDDE,IAAV,EAAoB;AACZ,QAAA,EAAA,GAAA,KAAA,aAAA;ACCN,ADDM,QCCA,ADDE,QAAA,CCCO,EDDP,CCCU,CDDV,CAAA,ECCc,KAAtB,CDDM;ACGN,ADHM,ICGN,IDHkB,GCGX,CAAC,IDHU,GAAA,ECGlB,ADHkB,CAAA,ECGE,MDHd,GCGN;AACA,ADHA,QCGM,GDHC,GCGK,CDHD,CAAC,CCGG,ADHR,GAAS,CCGG,ADHZ,CCGa,GDHC,ICGN,ADHU,CAAC,CAAL,CCGS,GDHC,MCGhB,EAAf,ADHO,IAAoC,IAAI,CAAC,CAAL,GAAS,CAA7C,IAAkD,IAAI,CAAC,CAAL,IAAU,QAAnE;ACIA,ADHD,GAHD,CCME,MAAM,CAAC,OAAP,CAAe,UAAA,IAAA,EAAI;AACjB,aAAA,OAAO,CAAC,QAAR,CACE,SAAS,GAAG,IAAI,CAAC,CAAj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","file":"GameUI.d604de4c.js","sourceRoot":"..\\static","sourcesContent":["export const CELLS_HORIZONTAL = 80;\r\nexport const CELLS_VERTICAL = 40;\r\nexport const SPEED = 100;\r\nexport const MAX_LEVEL = 10;\r\n\r\nexport interface Configuration {\r\n  level: number;\r\n  speed: number;\r\n  nbCellsX: number;\r\n  nbCellsY: number;\r\n  width: number;\r\n  height: number;\r\n  cellWidth: number;\r\n  cellHeight: number;\r\n  apples: number;\r\n}\r\n","export class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Configuration } from \"./Configuration\";\r\nimport { Game } from \"./Game\";\r\nimport { getStringDiff } from \"jest-diff\";\r\n\r\nexport class Grid {\r\n  private configuration: Configuration;\r\n  apples = [\r\n      new Cell(33, 22),\r\n      new Cell(35, 22),\r\n      new Cell(37, 22),\r\n      new Cell(39, 22),\r\n      new Cell(41, 22)\r\n    ];\r\n​\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n  }\r\n​\r\n  seed(): void {\r\n     this.apples.push(new Cell(Math.floor(Math.random() * 80), Math.floor(Math.random() * 40)));\r\n     this.apples.push(new Cell(Math.floor(Math.random() * 80), Math.floor(Math.random() * 40)));\r\n     this.apples.push(new Cell(Math.floor(Math.random() * 80), Math.floor(Math.random() * 40)));\r\n     this.apples.push(new Cell(Math.floor(Math.random() * 80), Math.floor(Math.random() * 40)));\r\n     this.apples.push(new Cell(Math.floor(Math.random() * 80), Math.floor(Math.random() * 40)));  \r\n  }\r\n​\r\n  isAppleInside(cell: Cell): boolean {\r\n    return this.apples.find(apples => apples.x === cell.x && apples.y === cell.y) !== undefined\r\n  }\r\n​\r\n  removeApple(cell: Cell): void {\r\n    const apple = this.apples.find(apple => apple.x === cell.x && apple.y === cell.y)!\r\n    const i = this.apples.indexOf(apple)\r\n    this.apples.splice(i,1)\r\n  }\r\n​\r\n  isDone(): boolean {\r\n    var isDone = false;\r\n    if( this.apples.length === 0 )\r\n    {\r\n      isDone = true;\r\n    }\r\n      return isDone;\r\n  }\r\n​\r\n  getApples(): Cell[] {\r\n    return this.apples\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Direction } from \"./Direction\";\r\nimport { Game } from \"./Game\";\r\n\r\nexport class Snake {\r\n  head = new Cell(2, 0)\r\n  tail = [new Cell(0, 0), new Cell(1, 0)]\r\n  direction: Direction = 'Right'\r\n  tailSize = 2\r\n\r\n\r\n  setDirection(direction: Direction) {\r\n    \r\nif(this.direction === 'Right')\r\n{\r\n  if(direction === 'Left')\r\n  {\r\n    direction = 'Right'\r\n  }\r\n \r\n  \r\n}  \r\nelse if(this.direction === 'Left')\r\n{\r\n  if(direction === 'Right')\r\n  {\r\n    direction = 'Left'\r\n  }\r\n} \r\nelse if(this.direction === 'Up')\r\n{\r\n  if(direction === 'Down')\r\n  {\r\n    direction = 'Up'\r\n  }\r\n} \r\nelse if(this.direction === 'Down')\r\n{\r\n  if(direction === 'Up')\r\n  {\r\n    direction = 'Down'\r\n  }\r\n} \r\nthis.direction = direction\r\n  }\r\n\r\n  move() {\r\n    this.tail.push(this.head)\r\n    if (this.tailSize < this.tail.length) {\r\n      this.tail.shift()\r\n    }\r\n    switch (this.direction) {\r\n      case 'Right':\r\n        this.head = new Cell(this.head.x + 1, this.head.y)\r\n        break\r\n      case 'Down':\r\n        this.head = new Cell(this.head.x, this.head.y + 1)\r\n        break\r\n      case 'Up':\r\n        this.head = new Cell(this.head.x, this.head.y - 1)\r\n        break\r\n      case 'Left':\r\n        this.head = new Cell(this.head.x - 1, this.head.y)\r\n        break\r\n    }\r\n\r\n  }\r\n\r\n  grow() {\r\n    this.tailSize += 3\r\n  }\r\n\r\n  getHead(): Cell {\r\n    return this.head;\r\n  }\r\n\r\n  isSnake(cell: Cell): boolean {\r\n   var stop = false;\r\n   \r\n   if (this.tail.some(element => element.x === cell.x && element.y === cell.y) === true)\r\n   {\r\n    stop = true;\r\n   }\r\n  return stop\r\n  }\r\n\r\n  getDirection(): Direction {\r\n    return this.direction;\r\n  }\r\n\r\n  getTail(): Cell[] {\r\n    return this.tail\r\n  }\r\n\r\n}\r\n","import { Grid } from \"./Grid\";\r\nimport { Snake } from \"./Snake\";\r\nimport { Configuration, MAX_LEVEL } from \"./Configuration\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class Game {\r\n  private score: number = 0;\r\n  private running: boolean = false;\r\n  private grid: Grid;\r\n  private snake: Snake;\r\n  private configuration: Configuration;\r\n  private nextTick: number;\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n    this.snake = new Snake();\r\n    this.grid = new Grid(this.configuration);\r\n    this.nextTick = 0;\r\n    this.running = true;\r\n  }\r\n\r\n  getSnake(): Snake {\r\n    return this.snake;\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.configuration;\r\n  }\r\n\r\n  shouldUpdate(time: number): boolean {\r\n    return this.running && time >= this.nextTick;\r\n  }\r\n\r\n  update(time: number) {\r\n    this.nextTick = time + this.configuration.speed;\r\n\r\n    this.snake.move();\r\n\r\n    switch (this.checkState()) {\r\n      case -1:\r\n        this.die();\r\n        break;\r\n      case 1:\r\n        this.snake.grow();\r\n        this.score += 100;\r\n        this.grid.removeApple(this.snake.getHead());\r\n        if (this.grid.isDone()) {\r\n          this.levelUp();\r\n        }\r\n    }\r\n  }\r\n\r\n  checkState() {\r\n    const cell = this.snake.getHead();\r\n    // left the play area or ate itself??\r\n    if (this.isOutside(cell) || this.snake.isSnake(cell)) {\r\n      // dead\r\n      return -1\r\n    }\r\n    // ate apple?\r\n    if (this.grid.isAppleInside(cell)) {\r\n      return 1;\r\n    }\r\n    // nothing special\r\n    return 0;\r\n  }\r\n\r\n  levelUp() {\r\n    this.score += 1000;\r\n    this.configuration.level++;\r\n    if (this.configuration.level < MAX_LEVEL) {\r\n      this.configuration.speed -= 7;\r\n      this.grid.seed();\r\n    } else {\r\n      this.win();\r\n    }\r\n  }\r\n\r\n  win() {\r\n    this.stop();\r\n  }\r\n\r\n  die() {\r\n    this.stop();\r\n  }\r\n\r\n  isOutside(cell: Cell) {\r\n    const { nbCellsX, nbCellsY } = this.configuration;\r\n    return cell.x < 0 || cell.x >= nbCellsX || cell.y < 0 || cell.y >= nbCellsY;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  getGrid(): Grid {\r\n    return this.grid;\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n  }\r\n}\r\n","import {\r\n  Configuration,\r\n  CELLS_HORIZONTAL,\r\n  CELLS_VERTICAL,\r\n  SPEED\r\n} from \"./engine/Configuration\";\r\nimport { Game } from \"./engine/Game\";\r\n\r\nconst CELL_SIZE = 20;\r\nconst SCALE = 2.0;\r\n\r\nclass GameUI {\r\n  private canvas: HTMLCanvasElement;\r\n  private game: Game;\r\n\r\n  constructor(canvas: HTMLCanvasElement, game: Game) {\r\n    this.canvas = canvas;\r\n    this.game = game;\r\n    requestAnimationFrame(this.draw.bind(this));\r\n\r\n    window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n    window.focus();\r\n  }\r\n\r\n  draw(time: number) {\r\n    const context = this.canvas.getContext(\"2d\")!;\r\n    if (this.game.shouldUpdate(time)) {\r\n      this.drawBackground(context);\r\n      this.drawGrid(context);\r\n      this.drawBrand(context);\r\n      this.drawScore(context);\r\n      this.drawSnake(context);\r\n      this.drawApples(context);\r\n      this.game.update(time);\r\n    }\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  drawBackground(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.fillStyle = \"#4caf50\";\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  drawBrand(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.font = height / 2.5 + \"px Roboto\";\r\n    context.textBaseline = \"middle\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(\"CODELEX\", width / 2, height / 2);\r\n  }\r\n\r\n  drawScore(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(game.getScore().toString(), 10 * SCALE, 10 * SCALE);\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D) {\r\n    const game = this.game;\r\n    const { width, height, cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n    context.lineWidth = lineWidth;\r\n\r\n    for (let x = 0; x <= width; x += cellWidth) {\r\n      context.beginPath();\r\n      context.moveTo(x, 0);\r\n      context.lineTo(x, height);\r\n      context.stroke();\r\n    }\r\n\r\n    for (let y = 0; y <= height; y += cellHeight) {\r\n      context.beginPath();\r\n      context.moveTo(0, y);\r\n      context.lineTo(width, y);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  drawApples(context: CanvasRenderingContext2D) {\r\n    const { cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.fillStyle = \"#e91e63\";\r\n    const apples = game.getGrid().getApples();\r\n    apples.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x + lineWidth,\r\n        cellHeight * cell.y + lineWidth,\r\n        cellWidth - lineWidth * 2,\r\n        cellHeight - lineWidth * 2\r\n      )\r\n    );\r\n  }\r\n\r\n  drawSnake(context: CanvasRenderingContext2D) {\r\n    const snake = this.game.getSnake();\r\n    const { cellWidth, cellHeight } = this.game.getConfiguration();\r\n    // head\r\n    const size = (CELL_SIZE * SCALE) / 10;\r\n    const offset = (CELL_SIZE * SCALE) / 3;\r\n    const x = cellWidth * snake.getHead().x;\r\n    const y = cellHeight * snake.getHead().y;\r\n    context.fillStyle = \"#111111\";\r\n    context.fillRect(x, y, cellWidth, cellHeight);\r\n    // eyes\r\n    switch (snake.getDirection()) {\r\n      case \"Up\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Down\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Right\":\r\n        context.beginPath();\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Left\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n    }\r\n    // tail\r\n    context.fillStyle = \"#333333\";\r\n    const tail = snake.getTail();\r\n    tail.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x,\r\n        cellHeight * cell.y,\r\n        cellWidth,\r\n        cellHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const snake = this.game.getSnake();\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Up\");\r\n        break;\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Down\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Left\");\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Right\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst createCanvas = (): HTMLCanvasElement => {\r\n  const container = document.getElementById(\"game\")!;\r\n  const canvas = document.createElement(\"Canvas\") as HTMLCanvasElement;\r\n  container.appendChild(canvas);\r\n\r\n  // canvas element size in the page\r\n  canvas.style.width = CELLS_HORIZONTAL * CELL_SIZE + \"px\";\r\n  canvas.style.height = CELLS_VERTICAL * CELL_SIZE + \"px\";\r\n\r\n  // image buffer size\r\n  canvas.width = CELLS_HORIZONTAL * CELL_SIZE * SCALE;\r\n  canvas.height = CELLS_VERTICAL * CELL_SIZE * SCALE;\r\n\r\n  return canvas;\r\n};\r\n\r\nconst createConfiguration = (canvas: HTMLCanvasElement): Configuration => {\r\n  return {\r\n    level: 0,\r\n    speed: SPEED,\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    nbCellsX: CELLS_HORIZONTAL,\r\n    nbCellsY: CELLS_VERTICAL,\r\n    cellWidth: canvas.width / CELLS_HORIZONTAL,\r\n    cellHeight: canvas.height / CELLS_VERTICAL,\r\n    apples: 5\r\n  };\r\n};\r\n\r\nconst canvas = createCanvas();\r\nconst configuration = createConfiguration(canvas);\r\nconst game = new Game(configuration);\r\n\r\nnew GameUI(canvas, game);\r\n"]}